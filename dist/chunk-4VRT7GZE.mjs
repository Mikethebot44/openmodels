var h=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+s+'" is not supported')});import u from"node-fetch";var c=class{constructor(r){this.config=r}};var o=class extends Error{constructor(t,n,e){super(t);this.status=n;this.code=e;this.name="OpenModelsError"}};async function*p(s){if(!s.body)throw new o("Response body is null");if(s.status===401)throw new o("Invalid API key. Please check your credentials.",401);if(s.status===403)throw new o("Insufficient credits. Please top up your account.",403);let t=(await s.text()).split(`
`);for(let n of t){let e=n.trim();if(e!==""){if(e==="[DONE]")return;if(e.startsWith("data: ")){let a=e.slice(6);if(a==="[DONE]")return;try{let m=JSON.parse(a);m.choices?.[0]?.delta?.content&&(yield m.choices[0].delta.content)}catch{continue}}}}}var i=class extends c{async chat(r){let t=`${this.config.baseUrl}/chat`,n={"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},e=await u(t,{method:"POST",headers:n,body:JSON.stringify(r)});if(!e.ok){let a=await e.text();throw e.status===401?new o("Invalid API key. Please check your credentials.",401):e.status===403?new o("Insufficient credits. Please top up your account.",403):new o(`Modal API error: ${e.status} ${a}`,e.status)}return e}async embed(r){let t=`${this.config.baseUrl}/embed`,n={"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},e=await u(t,{method:"POST",headers:n,body:JSON.stringify(r)});if(!e.ok){let a=await e.text();throw e.status===401?new o("Invalid API key. Please check your credentials.",401):e.status===403?new o("Insufficient credits. Please top up your account.",403):new o(`Modal API error: ${e.status} ${a}`,e.status)}return e}async image(r){let t=`${this.config.baseUrl}/image`,n={"Content-Type":"application/json",Authorization:`Bearer ${this.config.apiKey}`},e=await u(t,{method:"POST",headers:n,body:JSON.stringify(r)});if(!e.ok){let a=await e.text();throw e.status===401?new o("Invalid API key. Please check your credentials.",401):e.status===403?new o("Insufficient credits. Please top up your account.",403):new o(`Modal API error: ${e.status} ${a}`,e.status)}return e}};var d=class{constructor(r={}){if(!r.apiKey)throw new o("API key is required. Please provide an API key in the client configuration.");if(!r.apiKey.startsWith("om_")||r.apiKey.length<10)throw new o('Invalid API key format. API keys must start with "om_" and be at least 10 characters long.');let t=r.baseUrl||"https://tryscout.dev",n=e=>t.includes("modal.run")||t.includes("/api/")?t:t.includes(".")?`${t}/api/${e}`:`https://tryscout.dev/api/${e}`;this.textProvider=new i({apiKey:r.apiKey,baseUrl:n("text")}),this.embedProvider=new i({apiKey:r.apiKey,baseUrl:n("embed")}),this.imageProvider=new i({apiKey:r.apiKey,baseUrl:n("image")})}async chat(r){try{let t=await this.textProvider.chat(r);return r.stream?p(t):await t.json()}catch(t){throw t instanceof Error?new o(t.message):new o("Unknown error occurred")}}async embed(r){try{return await(await this.embedProvider.embed(r)).json()}catch(t){throw t instanceof Error?new o(t.message):new o("Unknown error occurred")}}async image(r){try{return await(await this.imageProvider.image(r)).json()}catch(t){throw t instanceof Error?new o(t.message):new o("Unknown error occurred")}}};function l(s){return new d(s)}export{h as a,o as b,p as c,i as d,d as e,l as f};
//# sourceMappingURL=chunk-4VRT7GZE.mjs.map